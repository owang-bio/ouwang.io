<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data Analyst&#39;s Blog</title>
    <link>https://owang-bio.github.io/ouwang.io/</link>
    <description>Recent content on Data Analyst&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Oct 2021 14:47:39 -0600</lastBuildDate><atom:link href="https://owang-bio.github.io/ouwang.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Timestamp in Pandas</title>
      <link>https://owang-bio.github.io/ouwang.io/python-for-forecast-analyst/date_functions_in_pandas/</link>
      <pubDate>Sat, 09 Oct 2021 14:47:39 -0600</pubDate>
      
      <guid>https://owang-bio.github.io/ouwang.io/python-for-forecast-analyst/date_functions_in_pandas/</guid>
      <description>Instantiation Timestamp in Pandas is similar to Pythonâ€™s Datetime objects, but Pandas&amp;rsquo;s Timestamp is more flexible when it comes to instantiation. For example, the following code does the same thing to return a Timestamp(&amp;lsquo;2018-01-05 00:00:00&amp;rsquo;):
pd.Timestamp(&amp;quot;2018-01-05&amp;quot;) pd.Timestamp(&amp;quot;01-05-2018&amp;quot;) pd.Timestamp(&amp;quot;01 05 2018&amp;quot;) pd.Timestamp(&amp;quot;2018/01/05&amp;quot;) But I would stick with one format, for example, &amp;ldquo;2018-01-05&amp;rdquo;.
It is also convenient to get the Timestamp of right now:
pd.Timestamp(&amp;quot;today&amp;quot;) Using key word arguments will also work, for example:</description>
    </item>
    
    <item>
      <title>Python dateutil module</title>
      <link>https://owang-bio.github.io/ouwang.io/python-for-forecast-analyst/dateutil_module/</link>
      <pubDate>Sun, 20 Jun 2021 19:57:25 -0600</pubDate>
      
      <guid>https://owang-bio.github.io/ouwang.io/python-for-forecast-analyst/dateutil_module/</guid>
      <description>When we need to do any operations between two date/datetime objects, for example, addition or subtraction, we will need datedelta/timedelta. Unfortunately, the timedelta class included in datetime module has limited functions (in case you are interested: documentation). Python Numpy and Pandas have datedelta/timedelta objects, but if we are dealing with single datetime object, I found that dateutil is more intuitive. Although dateutil has many powerful functions, I will only introduce one function, the relativedelta(), which I use the most frequently.</description>
    </item>
    
    <item>
      <title>Introduction</title>
      <link>https://owang-bio.github.io/ouwang.io/posts/introduction/</link>
      <pubDate>Wed, 16 Jun 2021 01:16:38 -0600</pubDate>
      
      <guid>https://owang-bio.github.io/ouwang.io/posts/introduction/</guid>
      <description>This is my GitHub page where I post things that might be helpful for data analysts who regularly use Python and Excel.
The content will focus on specific functions or libraries in Python that are commonly used in my daily work.
I will keep each blog as short as 1 to 3 minutes reading so that if anyone would read it, they don&amp;rsquo;t get bored before finishing reading. :-)</description>
    </item>
    
    <item>
      <title>Python datetime module</title>
      <link>https://owang-bio.github.io/ouwang.io/python-for-forecast-analyst/date_functions/</link>
      <pubDate>Tue, 15 Jun 2021 23:58:51 -0600</pubDate>
      
      <guid>https://owang-bio.github.io/ouwang.io/python-for-forecast-analyst/date_functions/</guid>
      <description>I am dealing with time series data every day. So, the first Python module I want to mention is datetime which provides basic classes for dates and time manipulation.
I am helping several international markets with forecasting, but most of the time I don&amp;rsquo;t need to worry about time zone or daylight saving time, etc. If you are interested in the datetime type that include such information, you can learn more about it from the documentation.</description>
    </item>
    
    <item>
      <title>About Author</title>
      <link>https://owang-bio.github.io/ouwang.io/author/</link>
      <pubDate>Mon, 06 Apr 2020 02:07:31 +0600</pubDate>
      
      <guid>https://owang-bio.github.io/ouwang.io/author/</guid>
      <description>I am John Doe and currently working as a data &amp;amp; forecast analyst. I have been learning data analytics every day and taking notes using Microsoft OneNote. I think it would be interesting if I make my notes public, which is why I am creating this blog. I will spend a couple of minutes everyday and write about something I have learned every day. Hope some of my blogs can be helpful to some of the people.</description>
    </item>
    
    <item>
      <title>Admin Panel</title>
      <link>https://owang-bio.github.io/ouwang.io/admin/</link>
      <pubDate>Mon, 06 Apr 2020 02:07:30 +0600</pubDate>
      
      <guid>https://owang-bio.github.io/ouwang.io/admin/</guid>
      <description></description>
    </item>
    
    <item>
      <title>All Sections</title>
      <link>https://owang-bio.github.io/ouwang.io/sections/</link>
      <pubDate>Mon, 06 Apr 2020 02:07:30 +0600</pubDate>
      
      <guid>https://owang-bio.github.io/ouwang.io/sections/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
